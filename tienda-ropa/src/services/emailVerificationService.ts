import emailjs from '@emailjs/browser';

// Configuraci√≥n de EmailJS para verificaci√≥n de email
const EMAILJS_CONFIG = {
    serviceId: 'service_oz3m2jd',
    templateId: 'template_6yo35oc',
    publicKey: 'OCa3jUXBSMKft2FcT'
};

// Inicializar EmailJS
emailjs.init(EMAILJS_CONFIG.publicKey);

// Verificar si EmailJS est√° configurado
const isEmailJSConfigured = () => {
    return EMAILJS_CONFIG.serviceId.startsWith('service_') &&
        EMAILJS_CONFIG.templateId.startsWith('template_') &&
        EMAILJS_CONFIG.publicKey.length > 10;
};

/**
 * Enviar email de verificaci√≥n para usuarios
 * @param email - Email del usuario
 * @param nombre - Nombre del usuario
 * @param verificationToken - Token de verificaci√≥n
 * @returns Promise<boolean> - true si se envi√≥ correctamente
 */
export const sendUserVerificationEmail = async (
    email: string,
    nombre: string,
    verificationToken: string
): Promise<boolean> => {
    try {
        console.log('üìß Enviando email de verificaci√≥n de usuario...');

        if (!isEmailJSConfigured()) {
            console.warn('‚ö†Ô∏è EmailJS no est√° configurado. Simulando env√≠o de email...');
            console.log(`üìß Email de verificaci√≥n simulado para ${email}:`);
            console.log(`üîó Token: ${verificationToken}`);
            console.log(`üë§ Usuario: ${nombre}`);
            console.log(`üåê URL de verificaci√≥n: ${window.location.origin}/verify-email?token=${verificationToken}`);
            console.log('üí° Para env√≠os reales, configura EmailJS con credenciales v√°lidas');
            return true; // Simular √©xito
        }

        // URL del enlace de verificaci√≥n
        const verificationUrl = `${window.location.origin}/verify-email?token=${verificationToken}`;

        // Par√°metros para el template de verificaci√≥n
        const templateParams = {
            email: email,  // Para el campo "Para enviar un correo electr√≥nico"
            to_name: nombre,  // Para {{to_name}} en el template
            reset_url: verificationUrl,  // Para {{reset_url}} en el template
            verification_token: verificationToken,
            from_name: 'Tienda de Ropa',
            message: `Hola ${nombre}, verifica tu email para activar tu cuenta.`
        };

        console.log('üîß Configuraci√≥n EmailJS:', {
            serviceId: EMAILJS_CONFIG.serviceId,
            templateId: EMAILJS_CONFIG.templateId,
            publicKey: EMAILJS_CONFIG.publicKey.substring(0, 10) + '...'
        });
        console.log('üìù Par√°metros del template:', templateParams);

        const response = await emailjs.send(
            EMAILJS_CONFIG.serviceId,
            EMAILJS_CONFIG.templateId,
            templateParams,
            EMAILJS_CONFIG.publicKey
        );

        console.log('‚úÖ Email de verificaci√≥n enviado exitosamente:', response);
        return true;

    } catch (error: any) {
        console.error('‚ùå Error enviando email de verificaci√≥n:', error);
        console.error('üîç Detalles del error:', {
            message: error.message,
            status: error.status,
            text: error.text,
            serviceId: EMAILJS_CONFIG.serviceId,
            templateId: EMAILJS_CONFIG.templateId
        });

        if (error.status === 404) {
            console.error('üö® Error 404: Verifica que el Service ID y Template ID sean correctos en EmailJS');
            console.error('üìã Valores actuales:', {
                serviceId: EMAILJS_CONFIG.serviceId,
                templateId: EMAILJS_CONFIG.templateId
            });
        } else if (error.status === 400) {
            console.error('üö® Error 400: Par√°metros incorrectos');
            console.error('   ‚Ä¢ Verifica que tu template de EmailJS tenga los par√°metros correctos');
            console.error('   ‚Ä¢ Aseg√∫rate de que {{email}}, {{to_name}} y {{message}} est√©n definidos en tu template');
        } else if (error.status === 422) {
            console.error('üö® Error 422 - Validaci√≥n fallida:');
            console.error('   ‚Ä¢ Los par√°metros del template no coinciden con lo esperado');
            console.error('   ‚Ä¢ Verifica que tu template use: {{email}}, {{to_name}}, {{reset_url}}, {{verification_token}}');
            console.error('   ‚Ä¢ Par√°metros enviados:', {
                email: email,
                to_name: nombre,
                reset_url: verificationUrl,
                verification_token: verificationToken,
                from_name: 'Tienda de Ropa',
                message: `Hola ${nombre}, verifica tu email para activar tu cuenta.`
            });
        }

        return false;
    }
};

/**
 * Enviar email de verificaci√≥n para empleados
 * @param email - Email del empleado
 * @param nombre - Nombre del empleado
 * @param verificationToken - Token de verificaci√≥n
 * @returns Promise<boolean> - true si se envi√≥ correctamente
 */
export const sendEmployeeVerificationEmail = async (
    email: string,
    nombre: string,
    verificationToken: string
): Promise<boolean> => {
    try {
        console.log('üìß Enviando email de verificaci√≥n de empleado...');

        if (!isEmailJSConfigured()) {
            console.warn('‚ö†Ô∏è EmailJS no est√° configurado. Simulando env√≠o de email...');
            console.log(`üìß Email de verificaci√≥n de empleado simulado para ${email}:`);
            console.log(`üîó Token: ${verificationToken}`);
            console.log(`üë§ Empleado: ${nombre}`);
            console.log(`üåê URL de verificaci√≥n: ${window.location.origin}/admin/verify-email?token=${verificationToken}`);
            console.log('üí° Para env√≠os reales, configura EmailJS con credenciales v√°lidas');
            return true; // Simular √©xito
        }

        // URL del enlace de verificaci√≥n (para panel administrativo)
        const verificationUrl = `${window.location.origin}/admin/verify-email?token=${verificationToken}`;

        // Par√°metros para el template de verificaci√≥n
        const templateParams = {
            email: email,  // Para el campo "Para enviar un correo electr√≥nico"
            to_name: nombre,  // Para {{to_name}} en el template
            reset_url: verificationUrl,  // Para {{reset_url}} en el template
            verification_token: verificationToken,
            from_name: 'Panel Administrativo - Tienda de Ropa',
            message: `Hola ${nombre}, verifica tu email para activar tu cuenta de empleado.`
        };

        console.log('üîß Configuraci√≥n EmailJS:', {
            serviceId: EMAILJS_CONFIG.serviceId,
            templateId: EMAILJS_CONFIG.templateId,
            publicKey: EMAILJS_CONFIG.publicKey.substring(0, 10) + '...'
        });
        console.log('üìù Par√°metros del template:', templateParams);

        const response = await emailjs.send(
            EMAILJS_CONFIG.serviceId,
            EMAILJS_CONFIG.templateId,
            templateParams,
            EMAILJS_CONFIG.publicKey
        );

        console.log('‚úÖ Email de verificaci√≥n de empleado enviado exitosamente:', response);
        return true;

    } catch (error: any) {
        console.error('‚ùå Error enviando email de verificaci√≥n de empleado:', error);
        console.error('üîç Detalles del error:', {
            message: error.message,
            status: error.status,
            text: error.text,
            serviceId: EMAILJS_CONFIG.serviceId,
            templateId: EMAILJS_CONFIG.templateId
        });

        if (error.status === 404) {
            console.error('üö® Error 404: Verifica que el Service ID y Template ID sean correctos en EmailJS');
        } else if (error.status === 400) {
            console.error('üö® Error 400: Par√°metros incorrectos');
        }

        return false;
    }
};

/**
 * Funci√≥n de prueba para verificar que EmailJS funciona
 * @returns Promise<boolean> - true si funciona correctamente
 */
export const testEmailVerification = async (): Promise<boolean> => {
    try {
        console.log('üß™ Iniciando prueba de verificaci√≥n de email...');

        // Par√°metros para el template de verificaci√≥n
        const templateParams = {
            email: 'saulozamudiotic@gmail.com',  // Para el campo "Para enviar un correo electr√≥nico"
            to_name: 'Saulo Zamudio',  // Para {{to_name}} en el template
            reset_url: 'https://example.com/verify-email?token=test123',  // Para {{reset_url}} en el template
            verification_token: 'test-token-123',
            from_name: 'Tienda de Ropa',
            message: 'Esta es una prueba de verificaci√≥n de email'
        };

        console.log('üìß Enviando email de prueba...');
        console.log('üîß Configuraci√≥n:', EMAILJS_CONFIG);
        console.log('üìù Par√°metros:', templateParams);

        const response = await emailjs.send(
            EMAILJS_CONFIG.serviceId,
            EMAILJS_CONFIG.templateId,
            templateParams,
            EMAILJS_CONFIG.publicKey
        );

        console.log('‚úÖ Test de verificaci√≥n de email exitoso:', response);
        return true;

    } catch (error: any) {
        console.error('‚ùå Error en prueba de verificaci√≥n de email:', error);
        console.error('üîç Detalles del error:', {
            message: error.message,
            status: error.status,
            text: error.text,
            serviceId: EMAILJS_CONFIG.serviceId,
            templateId: EMAILJS_CONFIG.templateId
        });

        if (error.status === 404) {
            console.error('üö® Error 404 - Cuenta no encontrada:');
            console.error('   ‚Ä¢ Verifica que tus credenciales de EmailJS sean correctas');
            console.error('   ‚Ä¢ Aseg√∫rate de que tu cuenta de EmailJS est√© activa');
            console.error('   ‚Ä¢ Crea un archivo .env.local en tienda-ropa/ con tus credenciales');
            console.error('   ‚Ä¢ Formato del .env.local:');
            console.error('     VITE_EMAILJS_SERVICE_ID=tu_service_id');
            console.error('     VITE_EMAILJS_TEMPLATE_ID=tu_template_id');
            console.error('     VITE_EMAILJS_PUBLIC_KEY=tu_public_key');
        } else if (error.status === 400) {
            console.error('üö® Error 400 - Par√°metros incorrectos:');
            console.error('   ‚Ä¢ Verifica que tu template de EmailJS tenga los par√°metros correctos');
            console.error('   ‚Ä¢ Aseg√∫rate de que to_email, to_name y message est√©n definidos en tu template');
        }

        return false;
    }
};
